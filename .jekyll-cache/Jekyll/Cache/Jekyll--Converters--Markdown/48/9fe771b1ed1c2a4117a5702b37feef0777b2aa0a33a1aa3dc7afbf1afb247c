I"´<h1 id="interfaces---suite">Interfaces - suite</h1>

<h2 id="mise-en-oeuvre--design-pattern-etat---la-cafeti√®re-sensespresso-le-retour">Mise en oeuvre : <em>Design Pattern</em> Etat - la cafeti√®re Sensespresso (le retour)</h2>

<p>L‚Äôapproche orient√©e objet de la programmation d‚Äôune machine d‚Äô√©tat consiste √† d√©finir une super-classe abstraite poss√©dant une m√©thode pour chaque √©v√®nement auquel le syst√®me doit r√©agir. Cette classe abstraite (ici, <code class="highlighter-rouge">CoffeeMachineState</code>) peut d√©finir une impl√©mentation par d√©faut de ces m√©thodes qui g√©n√©ralement ne fait rien. Cela permet aux sous-classes de ne red√©finir que les m√©thodes correspondant aux √©v√®nements qu‚Äôelles souhaitent g√©rer. Chaque √©v√®nement est en effet trait√© en √©crivant une sous-classe sp√©cifique.</p>

<p>La classe principale (ici, <code class="highlighter-rouge">CoffeeMachine</code>) poss√®de une variable d‚Äôinstance r√©f√©ren√ßant l‚Äô√©tat courant (cette variable est de type <code class="highlighter-rouge">CoffeeMachineState</code>). Gr√¢ce au polymorphisme l‚Äôobjet r√©f√©renc√© est l‚Äôune des sous-classe de la classe abstraite <code class="highlighter-rouge">CoffeeMachineState</code>. Les transitions sont g√©r√©es en rempla√ßant cette r√©f√©rence par une r√©f√©rence vers le nouvel √©tat actif.</p>

<ul>
  <li>
    <p>Cr√©er un nouveau projet nomm√© Sensepresso. T√©l√©charger le <a href="/files/Sensespresso.zip">code de la cafeti√®re</a>, extraire l‚Äôarchive, s√©lectionner les dossiers et les <strong>glisser/d√©poser</strong> sur le dossier <em>src</em> du projet Eclipse.</p>
  </li>
  <li>
    <p>T√©l√©charger les biblioth√®ques <a href="/files/SteelSeries.jar">SteelSeries.jar</a> et <a href="/files/trident.jar">trident.jar</a> et les copier dans votre projet (avec un glisser/deposer sur le projet). Faire ensuite un clic droit sur chacune d‚Äôelle et s√©lectionner <em>Build Path</em> puis <em>Add To Build Path</em></p>
  </li>
</ul>

<p>Le diagramme d‚Äô√©tat d√©crivant le fonctionnement de la cafeti√®re est le suivant :</p>

<p><img src="/img/Sensespresso.png" alt="Cafetiere" /></p>

<ul>
  <li>
    <p>Suggestion de nommage pour les classes de gestion des diff√©rents √©tats :</p>

    <ul>
      <li>
        <p><code class="highlighter-rouge">CoffeeMachineHeatingState</code></p>
      </li>
      <li>
        <p><code class="highlighter-rouge">CoffeeMachineMissingWaterState</code></p>
      </li>
      <li>
        <p><code class="highlighter-rouge">CoffeeMachineOffState</code></p>
      </li>
      <li>
        <p><code class="highlighter-rouge">CoffeeMachinePrepareState</code></p>
      </li>
      <li>
        <p><code class="highlighter-rouge">CoffeeMachineReadyState</code></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Compl√©ter la m√©thode <code class="highlighter-rouge">transitionToState</code> de la classe <code class="highlighter-rouge">CoffeeMachineState</code>, puis cr√©er les 5 sous-classes de <code class="highlighter-rouge">CoffeeMachineState</code> permettant d‚Äôassurer le bon fonctionnement de la cafeti√®re selon le diagramme ci-dessous. En fonction du nombre de tasses, la transition entre l‚Äô√©tat <code class="highlighter-rouge">CoffeeMachinePrepareState</code> et l‚Äô√©tat <code class="highlighter-rouge">CoffeeMachineHeatingState</code> se fera √† l‚Äôaide d‚Äôune temporisation de 6 ou 12 secondes selon le nombre de tasses choisies. La temporisation sera g√©r√©e √† l‚Äôaide de la classe <code class="highlighter-rouge">Timer</code> du package <code class="highlighter-rouge">javax.swing</code>.</p>

    <p><strong>Faire valider par un enseignant.</strong></p>
  </li>
  <li>
    <p>Bien faire un dernier Commit &amp; Push.</p>
  </li>
</ul>

:ET